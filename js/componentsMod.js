// Generated by CoffeeScript 2.3.0
var componentInput, componentModule, componentOutput, moduleManager;

moduleManager = new D3NE.ModuleManager(['Entrée'], ['Sortie']);

componentModule = new D3NE.Component('Module', {
  builder: function(node) {
    var ctrl;
    if (!node.data.module) {
      node.data.module = {
        name: 'module',
        data: {
          id: editor.id,
          nodes: {}
        }
      };
    }
    moduleManager.getInputs(node.data.module.data).forEach((i) => {
      if (i.title === 'Entrée') {
        return node.addInput(new D3NE.Input(i.name, numSocket));
      }
    });
    /// else for another socket
    moduleManager.getOutputs(node.data.module.data).forEach((o) => {
      console.log(o.name, numSocket);
      return node.addOutput(new D3NE.Output(o.name, numSocket));
    });
    ctrl = new D3NE.Control("<div class='module-control'><input readonly type='text'><button>Edit</button></div>", (el, c) => {
      el.querySelector('input').value = node.data.module.name;
      return el.querySelector('button').onmousedown = () => {
        return openModule(node.data.module);
      };
    });
    return node.addControl(ctrl);
  },
  worker: moduleManager.workerModule.bind(moduleManager)
});

componentInput = new D3NE.Component('Entrée', {
  builder: function(node) {
    var ctrl, name, out;
    name = node.data.name || 'entrée';
    out = new D3NE.Output('Nombre', numSocket);
    ctrl = _createFieldControl('text', name, 'name', 'type the name');
    return node.addOutput(out).addControl(ctrl);
  },
  worker: moduleManager.workerInputs.bind(moduleManager)
});

componentOutput = new D3NE.Component('Sortie', {
  builder: function(node) {
    var ctrl, inp, name;
    name = node.data.name || 'sortie';
    inp = new D3NE.Input('Nombre', numSocket);
    ctrl = _createFieldControl('text', name, 'name', 'type the name');
    return node.addInput(inp).addControl(ctrl);
  },
  worker: moduleManager.workerOutputs.bind(moduleManager)
});
